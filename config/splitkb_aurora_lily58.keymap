/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE   &kp N1  &kp N2  &kp N3        &kp N4          &kp N5                           &kp N6     &kp N7      &kp N8         &kp N9   &kp N0    &kp BACKSPACE
&kp TAB     &kp Q   &kp W   &kp E         &kp R           &kp T                            &kp Y      &kp U       &kp I          &kp O    &kp P     &kp BACKSLASH
&kp ESCAPE  &kp A   &kp S   &kp D         &kp F           &kp G                            &kp H      &kp J       &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z   &kp X   &kp C         &kp V           &kp B      &kp LBKT    &kp RBKT  &kp N      &kp M       &kp COMMA      &kp DOT  &kp FSLH  &kp RCTRL
                            &kp LEFT_ALT  &kp LEFT_SHIFT  &kp ENTER  &mo 4       &mo 3     &kp SPACE  &kp RSHIFT  &kp RIGHT_GUI
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        caps {
            bindings = <
&trans  &trans     &trans     &trans     &trans     &trans                       &trans     &trans     &trans     &trans     &trans         &trans
&trans  &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)                    &kp LS(Y)  &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)      &kp LS(PIPE)
&trans  &kp LS(A)  &kp LS(S)  &kp LS(D)  &kp LS(F)  &kp LS(G)                    &kp LS(H)  &kp LS(J)  &kp LS(K)  &kp LS(L)  &kp LS(COLON)  &trans
&trans  &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)  &trans    &trans  &kp LS(N)  &kp LS(M)  &trans     &trans     &trans         &trans
                              &trans     &trans     &trans     &trans    &trans  &trans     &trans     &trans
            >;
        };

        rmod {
            bindings = <
&trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &out OUT_USB  &out OUT_BLE  &ext_power EP_OFF  &bt BT_CLR  &trans         &kp DELETE
&kp GRAVE  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                              &kp F7        &kp F8        &kp F9             &kp F10     &kp F11        &kp F12
&kp TILDE  &kp EXCL      &kp AT        &kp HASH      &kp DOLLAR    &kp PRCNT                           &kp HOME      &kp LEFT      &kp DOWN           &kp UP      &kp RIGHT      &kp END
&trans     &trans        &trans        &trans        &trans        &trans        &trans        &tog 1  &trans        &kp MINUS     &kp EQUAL          &trans      &kp RIGHT_ALT  &trans
                                       &trans        &trans        &trans        &kp DELETE    &trans  &trans        &trans        &trans
            >;
        };

        lmod {
            bindings = <
&kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PREV  &kp C_PP   &kp C_NEXT                           &trans     &trans     &trans     &trans    &trans    &trans
&kp F1      &kp F2             &kp F3           &kp F4      &kp F5     &kp F6                               &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp HOME    &kp LEFT_ARROW     &kp UP_ARROW     &kp DOWN    &kp RIGHT  &kp END                              &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp PIPE
&trans      &trans             &trans           &trans      &trans     &trans      &tog 2    &trans         &trans     &kp UNDER  &kp PLUS   &trans    &trans    &trans
                                                &trans      &trans     &trans      &trans    &kp BACKSPACE  &trans     &trans     &trans
            >;
        };
    };
};
